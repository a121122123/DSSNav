<launch>
  <arg name="x" default="0.0"/>
  <arg name="y" default="1.0"/>
  <arg name="z" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <arg name="gui" default="true"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find aws_robomaker_hospital_world)/worlds/hospital.world"/>
    <!-- <arg name="world_name" value="$(find aws_robomaker_hospital_world)/worlds/hospital_no_stand_people.world"/> -->
    <!-- <arg name="world_name" value="$(find aws_robomaker_hospital_world)/worlds/hospital_two_floors.world"/>  -->
    <!-- <arg name="world_name" value="$(find aws_robomaker_hospital_world)/worlds/hospital_three_floors.world"/>  -->
    <!-- <arg name="world_name" value="$(find aws_robomaker_hospital_world)/worlds/right_turn.world"/> -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="$(arg gui)"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="true"/>
  </include>

  <!-- For Tracer sim -->
  <!-- tracer_stock.launch -->
  <arg name="robot_namespace" default="/"/>
  <arg name="urdf_extras" default="$(find tracer_description)/urdf/empty.urdf"/>

  <param name="robot_description" command="$(find xacro)/xacro '$(find tracer_description)/urdf/tracer_v1.xacro'
    robot_namespace:=$(arg robot_namespace)
    urdf_extras:=$(arg urdf_extras)" />
  <!-- tracer_stock.launch -->
  
  <node name="spawn_tracer_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model 'tracer$(arg robot_namespace)'" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find tracer_gazebo_sim)/config/tracer_v1_control.yaml" command="load"/>

  <!-- load the controllers -->
  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="tracer_state_controller tracer_motor_r_controller tracer_motor_l_controller "/> -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- <node name="tracer_skid_steer_controller" pkg="tracer_gazebo_sim" type="tracer_skid_steer_controller">
    <param name="robot_namespace" type="string" value="$(arg robot_namespace)" />
  </node> -->

  <!-- tracer_base_sim.launch -->
  <arg name="simulated_robot" default="true" />
  <arg name="control_rate" default="50" />

  <!-- <node name="tracer_base_sim_node" pkg="tracer_base" type="tracer_base_sim_node" output="screen">
    <param name="simulated_robot" type="bool" value="$(arg simulated_robot)" />
    <param name="control_rate" type="int" value="$(arg control_rate)" />

    <param name="odom_frame" type="string" value="odom" />
    <param name="base_frame" type="string" value="base_link" />
    <param name="fl_wheel_frame" type="string" value="fl_wheel_link" />
    <param name="fr_wheel_frame" type="string" value="fr_wheel_link" />
    <param name="rr_wheel_frame" type="string" value="rr_wheel_link" />
    <param name="rl_wheel_frame" type="string" value="rl_wheel_link" />
    <param name="fl_castor_frame" type="string" value="fl_castor_link" />
    <param name="fr_castor_frame" type="string" value="fr_castor_link" />
    <param name="rr_castor_frame" type="string" value="rr_castor_link" />
    <param name="rl_castor_frame" type="string" value="rl_castor_link" />
  </node> -->
  <!-- tracer_base_sim.launch -->

</launch>
